version: '3.8'

services:
  jwt_service:
    build:
      context: ./services/jwt_service
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TOKEN_EXPIRATION=30
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
      # - 8001:8001
    environment:
      - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    # command: redis-server --appendonly yes
    restart: unless-stopped

  url_shortener:
    build:
      context: ./services/url_shortener_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./services/url_shortener_service:/app  # Ensure correct volume mapping
    environment:
      - FLASK_ENV=development
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
  # Flask App Service

  user_mmanagement:
    build:
      context: ./services/user_management_service
      dockerfile: Dockerfile
    container_name: user_mmanagement
    restart: always
    depends_on:
      - mysql
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DB: mydb
      MYSQL_PORT: 3306
      JWT_SERVER: http://jwt_service:8002/auth
    ports:
      - "8001:8000"


  
volumes:
  redis_data:
    driver: local
  mysql_data:
    driver: local